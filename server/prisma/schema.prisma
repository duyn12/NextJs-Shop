// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categogy {
  id        Int       @id @default(autoincrement())
  name        String
  Product Product[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  price       Int
  categoryId  Int
  category    Categogy  @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  quantity    Int
  description String
  OrderDetail OrderDetail[]
  ImageList ImageList[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ImageList {
  id          Int       @id @default(autoincrement())
  image       String
  productId   Int
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Order {
  id          Int       @id @default(autoincrement())
  codeOrder   String
  address     String
  phone       String
  totalPrice  Int
  status      Int
  OrderDetail OrderDetail[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OrderDetail {
  productId   Int
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orderId     Int
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  quantity    Int
  price       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@id([orderId, productId])
}

model Account {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Session   Session[]
}

model Session {
  token     String   @id
  accountId Int
  account   Account  @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  expiresAt DateTime
  createdAt DateTime @default(now())
}